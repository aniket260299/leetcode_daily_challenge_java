class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null) return head;

        ListNode slow, fast, leftTail;
        slow = fast = leftTail = head;

        while (fast != null && fast.next != null) {
            leftTail = slow;
            slow = slow.next;
            fast = fast.next.next;
        }

        leftTail.next = null;
        return mergeList(sortList(head), sortList(slow));
    }

    public ListNode mergeList(ListNode list1, ListNode list2) {
        ListNode sorted = new ListNode();
        ListNode curr = sorted;
        while (list1 != null && list2 != null) {
            if (list1.val < list2.val) {
                curr.next = list1;
                list1 = list1.next;
            } else {
                curr.next = list2;
                list2 = list2.next;
            }
            curr = curr.next;
        }

        curr.next = (list1 != null) ? list1 : list2;
        return sorted.next;
    }
}
