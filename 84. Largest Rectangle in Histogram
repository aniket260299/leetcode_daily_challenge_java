/**
 * @author Aniket
 */
class Solution {
    public int largestRectangleArea(int[] arr) {
        int n = arr.length;
        int[] lt = new int[n];
        int[] rt = new int[n];
        Stack<Integer> st = new Stack<>();
        Stack<Integer> st1 = new Stack<>();
        st.push(0);
        st1.push(n - 1);
        lt[0] = -1;
        rt[n - 1] = n;
        for (int i = 1, j = n - 2; i < n; i++, j--) {
            while (!st.isEmpty() && arr[i] <= arr[st.peek()])
                st.pop();

            if (st.isEmpty())
                lt[i] = -1;
            else
                lt[i] = st.peek();

            st.push(i);

            while (!st1.isEmpty() && arr[j] <= arr[st1.peek()])
                st1.pop();

            if (st1.isEmpty())
                rt[j] = n;
            else
                rt[j] = st1.peek();

            st1.push(j);
        }

        int area = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            area = Math.max(area, (rt[i] - lt[i] - 1) * arr[i]);
        }
        return area;
    }
}
