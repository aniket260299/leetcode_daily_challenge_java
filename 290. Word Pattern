/**
 * @author Aniket
 */
class Solution {
    public boolean wordPattern(String pattern, String s) {
        String[] arr = new String[26];
        String[] words = s.split(" ");
        int n = pattern.length();
        if (n != words.length)
            return false;
        for (int i = 0; i < n; i++) {
            char ch = pattern.charAt(i);
            if (arr[ch - 'a'] == null) {
                arr[ch - 'a'] = words[i];
            } else {
                if (words[i].equals(arr[ch - 'a']))
                    continue;
                else
                    return false;
            }
        }

        HashSet<String> hs = new HashSet<>();
        for (int i = 0; i < 26; i++) {
            if (arr[i] != null) {
                if (hs.contains(arr[i]))
                    return false;
                else
                    hs.add(arr[i]);
            }
        }
        return true;
    }
}
